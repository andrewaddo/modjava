DROP TABLE IF EXISTS usercart CASCADE;
DROP TABLE IF EXISTS user_demand CASCADE;
DROP TABLE IF EXISTS transactions CASCADE;
DROP TABLE IF EXISTS app_user CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS product CASCADE;

CREATE TABLE product (
  pid VARCHAR(45) NOT NULL,
  name VARCHAR(100) NULL DEFAULT NULL,
  type VARCHAR(20) NULL DEFAULT NULL,
  info VARCHAR(350) NULL DEFAULT NULL,
  price DECIMAL(12,2) NULL DEFAULT NULL,
  quantity INTEGER NULL DEFAULT NULL,
  image VARCHAR(512) NULL DEFAULT NULL,
  PRIMARY KEY (pid)
);

CREATE TABLE app_user (
  email VARCHAR(60) NOT NULL,
  name VARCHAR(30) NULL DEFAULT NULL,
  mobile BIGINT NULL DEFAULT NULL,
  address VARCHAR(250) NULL DEFAULT NULL,
  pincode INTEGER NULL DEFAULT NULL,
  password VARCHAR(100) NULL DEFAULT NULL,
  role VARCHAR(20) NULL DEFAULT NULL,
  PRIMARY KEY (email)
);

CREATE TABLE transactions (
  transid VARCHAR(45) NOT NULL,
  username VARCHAR(60) NULL DEFAULT NULL,
  "time" TIMESTAMP NULL DEFAULT NULL,
  amount DECIMAL(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (transid),
  CONSTRAINT truserid FOREIGN KEY (username) REFERENCES "app_user" (email)
);

CREATE TABLE orders (
  orderid VARCHAR(45) NOT NULL,
  prodid VARCHAR(45) NOT NULL,
  quantity INTEGER NULL DEFAULT NULL,
  amount DECIMAL(10,2) NULL DEFAULT NULL,
  shipped INTEGER NOT NULL DEFAULT 0,
  PRIMARY KEY (orderid, prodid),
  CONSTRAINT productid FOREIGN KEY (prodid) REFERENCES product (pid),
  CONSTRAINT orderid FOREIGN KEY (orderid) REFERENCES transactions (transid)
);

CREATE TABLE user_demand (
  username VARCHAR(60) NOT NULL,
  prodid VARCHAR(45) NOT NULL,
  quantity INTEGER NULL DEFAULT NULL,
  PRIMARY KEY (username, prodid),
  CONSTRAINT userdemailemail FOREIGN KEY (username) REFERENCES "app_user" (email),
  CONSTRAINT prodid FOREIGN KEY (prodid) REFERENCES product (pid)
);

CREATE TABLE usercart (
  username VARCHAR(60) NOT NULL,
  prodid VARCHAR(45) NOT NULL,
  quantity INTEGER NULL DEFAULT NULL,
  PRIMARY KEY (username, prodid),
  CONSTRAINT useremail FOREIGN KEY (username) REFERENCES "app_user" (email),
  CONSTRAINT prodidcart FOREIGN KEY (prodid) REFERENCES product (pid)
);